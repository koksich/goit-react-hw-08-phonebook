{"version":3,"file":"static/js/642.cb18263f.chunk.js","mappings":"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","sources":["components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 450px;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-family: monospace;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  border: 1px solid gray;\n  outline: none;\n  font-family: monospace;\n  font-size: 16px;\n\n  &:focus {\n    box-shadow: 1px 1px 3px black inset;\n  }\n`;","import { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { Input, Label, Wrapper } from \"./ContactsFilter.styled\";\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n  const onChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"filter\"> Find contacts by name</Label>\n      <Input type=\"text\" name=\"filter\" id=\"filter\" autoComplete=\"off\" onChange={onChangeFilter} />\n    </Wrapper>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.value;\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilteredContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 450px;\n  box-shadow: 1px 1px 3px black;\n  padding: 20px;\n  border-radius: 24px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-family: monospace;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  border: 1px solid gray;\n  outline: none;\n  font-family: monospace;\n  font-size: 16px;\n\n  &:focus {\n    box-shadow: 1px 1px 3px black inset;\n  }\n`;\n\nexport const Btn = styled.button`\n  margin-inline: auto;\n  display: block;\n  background-color: grey;\n  padding: 10px 20px;\n  font-size: 18px;\n  font-weight: 600;\n  font-family: monospace;\n  border-radius: 24px;\n  border: none;\n  outline: none;\n  box-shadow: 1px 1px 1px #393e46;\n  cursor: pointer;\n  transition: transform 250ms, box-shadow 250ms;\n  margin-bottom: 15px;\n  color: whitesmoke;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-2px);\n    box-shadow: 3px 3px 3px #393e46;\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { Btn, Form, Input, Label } from \"./ContactsForm.styled\";\nimport { warningToast } from \"components/Toasts/Toasts\";\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = event.currentTarget.elements;\n\n    if (onDuplicateCheck(name.value)) {\n      warningToast(`${name.value} is already in contacts`);\n      event.currentTarget.reset();\n      name.focus();\n      return;\n    }\n    dispatch(addContact({ name: name.value, number: number.value }));\n    event.currentTarget.reset();\n  };\n\n  const onDuplicateCheck = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n      <Form      onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        id=\"name\"\n      />\n\n      <Label htmlFor=\"number\">Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        id=\"number\"\n      />\n\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n\n  :not(:last-child) {\n    border-bottom: 1px solid black;\n  }\n`;\n\nexport const P = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  padding-bottom: 4px;\n`;\n\nexport const Btn = styled.button`\n  background-color: grey;\n  padding: 10px 20px;\n  font-size: 18px;\n  font-weight: 600;\n  font-family: monospace;\n  border-radius: 24px;\n  border: none;\n  outline: none;\n  box-shadow: 1px 1px 1px #393e46;\n  cursor: pointer;\n  transition: transform 250ms, box-shadow 250ms;\n  color: whitesmoke;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-2px);\n    box-shadow: 3px 3px 3px #393e46;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Btn, ListItem, P } from './ContactsListItem.styled';\n\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <div>\n        <P>{name}: </P>\n        <P>{number}</P>\n      </div>\n      <Btn\n        type=\"button\"\n        aria-label=\"delete\"\n        onClick={() => {\n          dispatch(deleteContact(id));\n        }}\n      >\n        Delete\n      </Btn>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 450px;\n  box-shadow: 1px 1px 3px black;\n  padding: 20px;\n  border-radius: 24px;\n`;","import { ContactListItem } from \"components/ContactsListItem/ContactsListItem\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { List } from \"./ContactsList.styled\";\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 600px;\n`;","import { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\nimport { ContactForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Helmet } from 'react-helmet';\nimport { Wrapper } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <ContactsFilter />\n      <ContactList/>\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;"],"names":["Wrapper","styled","Label","Input","ContactsFilter","dispatch","useDispatch","htmlFor","type","name","id","autoComplete","onChange","event","setFilter","target","value","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilteredContacts","filter","normalizedFilter","toLowerCase","contact","includes","Form","Btn","ContactForm","useSelector","onDuplicateCheck","some","onSubmit","preventDefault","currentTarget","elements","number","warningToast","reset","focus","addContact","pattern","title","required","ListItem","P","ContactListItem","onClick","deleteContact","List","ContactList","useEffect","fetchContacts","Helmet"],"sourceRoot":""}